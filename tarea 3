from igraph import *
from numpy import *
from matplotlib import *
from json import loads

def activos(data, month):

	usuariosAdict = dict()

	for i in data:
		for x,y in i.items():
			if x=="created_time":
				anio, mes, dia = y.strip().split('-')
				if anio == '2016' and int(mes) == int(month)-3:
					for k,o in i.items():
					    if k=="likes":
					        temp=o["data"]
					        for j in temp:
					            temp3=j["id"]
					            if temp3 in usuariosAdict.keys():
					               	usuariosAdict[temp3]+=1
					            else:
					               	usuariosAdict[temp3]=1
				else:
					continue
	for e,r in usuariosAdict.items():	
		if r <= 3:	
			del usuariosAdict[e]

	return usuariosAdict



def likes(data, month, name):

	usuariosLdict = dict()
	m = month

	for i in data:
		for x,y in i.items():
			if x=="created_time":
				anio, mes, dia = y.strip().split('-')
				if anio == '2016' and int(mes) == int(month):
					for k,o in i.items():
					    if k=="likes":
					        temp=o["data"]
					        for j in temp:
					            temp3=j["id"]
					            if temp3 in usuariosLdict.keys():
					               	usuariosLdict[temp3]+=1
					            else:
					               	usuariosLdict[temp3]=1
				else:
					continue
	print "En "+name+" hubo una cantidad de "+str(posts(data, m))+" con un total de "+str(sum(usuariosLdict.values()))+" likes."			             
	return usuariosLdict

def comments(data, month, name):

	usuariosCdict = dict()
	m = month

	for i in data:
		for x,y in i.items():
			if x=="created_time":
				anio, mes, dia = y.strip().split('-')
				if anio == '2016' and int(mes) == int(month):
					for k,o in i.items():
						if k=="comments":
							temp2 = o["data"]
							for g in temp2:
								temp4=g["from"]
								temp5=temp4.items()
								for x in temp5:
									if x[1] in usuariosCdict.keys():
										usuariosCdict[x[1]]+=1
								else:
									usuariosCdict[x[1]]=1
				else:
					continue
	print "En "+name+" hubo una cantidad de "+str(posts(data, m))+" con un total de "+str(sum(usuariosCdict.values()))+" comentarios."
	return usuariosCdict


def creargrapho(u1, name1, u2, name2, opcion):
	g = Graph()
	g.add_vertex(name1)
	g.add_vertex(name2)
	for u in u1.items():
		g.add_vertex(u[0])
		for v in range(0,u[1]):
			g.add_edge(u[0],name1)
	for us in u2.items():
		if us[0] not in u1.keys():
			g.add_vertex(us[0])
			g.add_edge(us[0], name2)
		else:
			for v1 in range(0, us[1]):
				g.add_edge(us[0], name2)
	if opcion==1:
		g.save("likes.gml", format = "gml")
	elif opcion==2:
		g.save("comments.gml", format = "gml")
	else:
		g.save("uactivos.gml", format = "gml")

def posts(data, month):
	posts=0

	for i in data:
		for x,y in i.items():
			if x=="created_time":
				anio, mes, dia = y.strip().split('-')
				if anio == '2016' and int(mes) == int(month):
					posts += 1
	return posts


print "Seleccione dos paginas"
print "........................"
print "1.- UTFSM"
print "2.- PUCV"
print "3.- UVALPO"
print "4.- UVM"
print "5.- UPLA"

p1 = raw_input("Ingrese pagina 1: ")
p2 = raw_input("ingrese pagina 2: ")

print "........................"
print "Que desea comparar?"
print "........................"
print "1.- Likes"
print "2.- Comments"
print "3.- Usuarios activos"

n = raw_input("Ingrese opcion: ")
month = raw_input("Ingrese numero de mes: ")

if p1=="1":
    p1="UTFSM"
elif p1=="2":
    p1="PUCV"
elif p1=="3":
    p1="UVALPO"
elif p1=="4":
    p1="UVM"
elif p1=="5":
    p1="UPLA"
    
if p2=="1":
    p2="UTFSM"
elif p2=="2":
    p2="PUCV"
elif p2=="3":
    p2="UVALPO"
elif p2=="4":
    p2="UVM"
elif p2=="5":
    p2="UPLA"

with open(p1+".json") as of:
        data=loads(of.readline())

with open(p2+".json") as of:
        data1=loads(of.readline())

if n=='1':
	pag1 = likes(data, month, p1)
	pag2 = likes(data1, month, p2)
	grapho = creargrapho(pag1, p1, pag2, p2, 1)


if n=='2':
	pag1 = comments(data, month, p1)
	pag2 = comments(data1, month, p2)
	grapho = creargrapho(pag1, p1, pag2, p2, 2)

if n=='3':
	pag1 = activos(data, month)
	pag2 = activos(data1, month)
	grapho = creargrapho(pag1, p1, pag2, p2, 3)
